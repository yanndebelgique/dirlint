"use strict";
exports.__esModule = true;
var child_process_1 = require("child_process");
var path = require("path");
var fs = require('fs');
/**
 * For each example dirrule it will run the case suite
 * Format is:
 * ```
 * case <number>:
 * <dirrule content>
 *
 * <directory structure>
 *
 * <dirlint output>
 * ```
 */
function pretty_print(path) {
    return path.replace(__dirname, '')
        .replace('/test_directories', '')
        .replace('test_directories', '');
}
function generate_example_file(example_dir_path) {
    var cases = fs.readdirSync(example_dir_path).filter(function (dir_name) {
        return dir_name.startsWith('case');
    });
    var dirrule_content = fs.readFileSync("".concat(example_dir_path, "/.dirrules.yaml"), 'utf8');
    var cases_text = cases.map(function (case_dir_path) {
        return generate_case_segment(path.join(__dirname, example_dir_path, case_dir_path));
    }).join('\n\n');
    return "## Example ".concat(pretty_print(example_dir_path).trim(), ":\n.dirrules.yaml\n```.dirrules.yaml\n").concat(dirrule_content.trim(), "\n```\n").concat(cases_text).trim();
}
function generate_case_segment(case_dir_path) {
    var _a;
    var tree_structure = (0, child_process_1.execSync)("tree -a ".concat(case_dir_path)).toString('utf8');
    var dirlint_output;
    try {
        dirlint_output = (0, child_process_1.execSync)("dirlint ".concat(case_dir_path)).toString('utf8');
    }
    catch (error) {
        dirlint_output = (_a = error === null || error === void 0 ? void 0 : error.stdout) === null || _a === void 0 ? void 0 : _a.toString('utf8');
    }
    return "\n### case ".concat(pretty_print(case_dir_path).trim(), ": \n``` directory structure\n").concat(pretty_print(tree_structure).trim(), "\n```\n\n``` dirlint output \n> dirlint ").concat(pretty_print(case_dir_path).trim(), "\n").concat(pretty_print(dirlint_output).trim(), " \n```\n  ").trim();
}
function generate_examples_file(dir) {
    var example_dirs = fs.readdirSync(dir).filter(function (dir_name) {
        return dir_name.startsWith('example');
    });
    var example_files = example_dirs.map(function (example_dir) {
        return generate_example_file(path.join(dir, example_dir));
    }).join('\n\n');
    return example_files;
}
function generate_and_save_examples_file(dir) {
    var examples_file = generate_examples_file(dir);
    fs.writeFileSync('./EXAMPLES.md', "AUTOGENERATED FILE SEE ".concat(__filename, " \n\n") + examples_file);
}
generate_and_save_examples_file('./test_directories');
